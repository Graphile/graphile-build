query {
  allTypes {
    nodes {
      ...type
    }
  }
  typeById(id: 12) {
    ...type
  }
}

fragment compoundType on CompoundType {
  a
  b
  c
  d
  e
  f
  fooBar
}

fragment type on Type {
  smallint
  bigint
  boolean
  enum
  enumArray
  domain
  domain2
  textArray
  json
  jsonb
  nullableRange {
    start { value inclusive }
    end { value inclusive }
  }
  numrange {
    start { value inclusive }
    end { value inclusive }
  }
  anIntRange {
    start { value inclusive }
    end { value inclusive }
  }
  money
  compoundType { ...compoundType }
  nestedCompoundType {
    a { ...compoundType }
    b { ...compoundType }
    bazBuz
  }
}
